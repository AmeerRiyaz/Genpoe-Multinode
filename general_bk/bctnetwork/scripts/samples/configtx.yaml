# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

---
################################################################################
#
#   Section: Organizations
#
#   - This section defines the different organizational identities which will
#   be referenced later in the configuration.
#
################################################################################
Organizations:

    # SampleOrg defines an MSP using the sampleconfig.  It should never be used
    # in production but may be used as a template for other definitions
    - &OrdererOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: OrdererMSP

        # ID to load the MSP definition as
        ID: OrdererMSP

        # MSPDir is the filesystem path which contains the MSP configuration
        MSPDir: ../orderer-org/crypto-config/ordererOrganizations/cdac.in/msp

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        # Policies:
        #     Readers:
        #         Type: Signature
        #         Rule: "OR('OrdererMSP.member')"
        #     Writers:
        #         Type: Signature
        #         Rule: "OR('OrdererMSP.member')"
        #     Admins:
        #         Type: Signature
        #         Rule: "OR('OrdererMSP.admin')"

    
    - &RegOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: RegMSP

        # ID to load the MSP definition as
        ID: RegMSP

        MSPDir: ../organizations/RegOrg/crypto-config/peerOrganizations/regorg.cdac.in/msp

        # Policies:
        #     Readers:
        #         Type: Signature
        #         Rule: "OR('RegMSP.admin','RegMSP.member', 'RegMSP.peer', 'RegMSP.client')"
        #     Writers:
        #         Type: Signature
        #         Rule: "OR('RegMSP.admin', 'RegMSP.peer','RegMSP.member','RegMSP.client')"
        #     Admins:
        #         Type: Signature
        #         Rule: "OR('RegMSP.admin')"

        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.regorg.cdac.in
              Port: 7051

    - &RevOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: RevMSP

        # ID to load the MSP definition as
        ID: RevMSP

        MSPDir: ../organizations/RevOrg/crypto-config/peerOrganizations/revorg.cdac.in/msp

        # Policies:
        #     Readers:
        #         Type: Signature
        #         Rule: "OR('RevMSP.admin', 'RevMSP.peer','RevMSP.member', 'RevMSP.client')"
        #     Writers:
        #         Type: Signature
        #         Rule: "OR('RevMSP.admin','RevMSP.peer','RevMSP.member', 'RevMSP.client')"
        #     Admins:
        #         Type: Signature
        #         Rule: "OR('RevMSP.admin')"

        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.revorg.cdac.in
              Port: 7051
    
    - &SurveyOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: SurveyMSP

        # ID to load the MSP definition as
        ID: SurveyMSP

        MSPDir: ../organizations/SurveyOrg/crypto-config/peerOrganizations/surveyorg.cdac.in/msp
        # Policies:
        #     Readers:
        #         Type: Signature
        #         Rule: "OR('SurveyMSP.admin', 'SurveyMSP.peer','SurveyMSP.member', 'SurveyMSP.client')"
        #     Writers:
        #         Type: Signature
        #         Rule: "OR('SurveyMSP.admin','SurveyMSP.peer','SurveyMSP.member', 'SurveyMSP.client')"
        #     Admins:
        #         Type: Signature
        #         Rule: "OR('SurveyMSP.admin')"
        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.surveyorg.cdac.in
              Port: 7051
    
    - &OtherOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: OtherMSP

        # ID to load the MSP definition as
        ID: OtherMSP

        MSPDir: ../organizations/OtherOrg/crypto-config/peerOrganizations/otherorg.cdac.in/msp
        # Policies:
        #     Readers:
        #         Type: Signature
        #         Rule: "OR('OtherMSP.admin', 'OtherMSP.peer','OtherMSP.member', 'OtherMSP.client')"
        #     Writers:
        #         Type: Signature
        #         Rule: "OR('OtherMSP.admin','OtherMSP.peer','OtherMSP.member', 'OtherMSP.client')"
        #     Admins:
        #         Type: Signature
        #         Rule: "OR('OtherMSP.admin')"
        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.otherorg.cdac.in
              Port: 7051

    - &ActsOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: ActsMSP

        # ID to load the MSP definition as
        ID: ActsMSP

        MSPDir: ../organizations/ActsOrg/crypto-config/peerOrganizations/actsorg.cdac.in/msp
        # Policies:
        #     Readers:
        #         Type: Signature
        #         Rule: "OR('ActsMSP.admin', 'ActsMSP.peer','ActsMSP.member', 'ActsMSP.client')"
        #     Writers:
        #         Type: Signature
        #         Rule: "OR('ActsMSP.admin', 'ActsMSP.peer','ActsMSP.member','ActsMSP.client')"
        #     Admins:
        #         Type: Signature
        #         Rule: "OR('ActsMSP.admin')"
        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.actsorg.cdac.in
              Port: 7051
    
    - &CdachOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: CdachMSP

        # ID to load the MSP definition as
        ID: CdachMSP

        MSPDir: ../organizations/CdachOrg/crypto-config/peerOrganizations/cdachorg.cdac.in/msp
        # Policies:
        #     Readers:
        #         Type: Signature
        #         Rule: "OR('CdachMSP.admin', 'CdachMSP.peer','CdachMSP.member','CdachMSP.cdacadmin','CdachMSP.genpoeuser','CdachMSP.client')"
        #     Writers:
        #         Type: Signature
        #         Rule: "OR('CdachMSP.admin', 'CdachMSP.peer','CdachMSP.member','CdachMSP.cdacadmin','CdachMSP.genpoeuser','CdachMSP.client')"
        #     Admins:
        #         Type: Signature
        #         Rule: "OR('CdachMSP.admin')"
        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.cdachorg.cdac.in
              Port: 7051
    
    - &DemoOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: DemoMSP

        # ID to load the MSP definition as
        ID: DemoMSP

        MSPDir: ../organizations/DemoOrg/crypto-config/peerOrganizations/demoorg.cdac.in/msp
        # Policies:
        #     Readers:
        #         Type: Signature
        #         Rule: "OR('DemoMSP.admin', 'DemoMSP.peer','DemoMSP.member', 'DemoMSP.client')"
        #     Writers:
        #         Type: Signature
        #         Rule: "OR('DemoMSP.admin', 'DemoMSP.peer','DemoMSP.member', 'DemoMSP.client')"
        #     Admins:
        #         Type: Signature
        #         Rule: "OR('DemoMSP.admin')"
        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.demoorg.cdac.in
              Port: 7051

    - &CdactnOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: CdactnMSP

        # ID to load the MSP definition as
        ID: CdactnMSP

        MSPDir: ../organizations/CdactnOrg/crypto-config/peerOrganizations/cdactnorg.cdac.in/msp
        # Policies:
        #     Readers:
        #         Type: Signature
        #         Rule: "OR('CdactnMSP.admin', 'CdactnMSP.peer','CdactnMSP.member','CdactnMSP.client')"
        #     Writers:
        #         Type: Signature
        #         Rule: "OR('CdactnMSP.admin', 'CdactnMSP.peer','CdactnMSP.member', 'CdactnMSP.client')"
        #     Admins:
        #         Type: Signature
        #         Rule: "OR('CdactnMSP.admin')"
        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.cdactnorg.cdac.in
              Port: 7051

    - &CdacndOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: CdacndMSP

        # ID to load the MSP definition as
        ID: CdacndMSP

        MSPDir: ../organizations/CdacndOrg/crypto-config/peerOrganizations/cdacndorg.cdac.in/msp
        # Policies:
        #     Readers:
        #         Type: Signature
        #         Rule: "OR('CdacndMSP.admin', 'CdacndMSP.peer', 'CdacndMSP.client')"
        #     Writers:
        #         Type: Signature
        #         Rule: "OR('CdacndMSP.admin', 'CdacndMSP.peer', 'CdacndMSP.client')"
        #     Admins:
        #         Type: Signature
        #         Rule: "OR('CdacndMSP.admin')"
        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.cdacndorg.cdac.in
              Port: 7051


################################################################################
#
#   SECTION: Capabilities
#
#   - This section defines the capabilities of fabric network. This is a new
#   concept as of v1.1.0 and should not be utilized in mixed networks with
#   v1.0.x peers and orderers.  Capabilities define features which must be
#   present in a fabric binary for that binary to safely participate in the
#   fabric network.  For instance, if a new MSP type is added, newer binaries
#   might recognize and validate the signatures from this type, while older
#   binaries without this support would be unable to validate those
#   transactions.  This could lead to different versions of the fabric binaries
#   having different world states.  Instead, defining a capability for a channel
#   informs those binaries without this capability that they must cease
#   processing transactions until they have been upgraded.  For v1.0.x if any
#   capabilities are defined (including a map with all capabilities turned off)
#   then the v1.0.x peer will deliberately crash.
#
################################################################################
Capabilities:
    # Channel capabilities apply to both the orderers and the peers and must be
    # supported by both.
    # Set the value of the capability to true to require it.
    Channel: &ChannelCapabilities
        # V1.3 for Channel is a catchall flag for behavior which has been
        # determined to be desired for all orderers and peers running at the v1.3.x
        # level, but which would be incompatible with orderers and peers from
        # prior releases.
        # Prior to enabling V1.3 channel capabilities, ensure that all
        # orderers and peers on a channel are at v1.3.0 or later.
        V1_3: true

    # Orderer capabilities apply only to the orderers, and may be safely
    # used with prior release peers.
    # Set the value of the capability to true to require it.
    Orderer: &OrdererCapabilities
        # V1.1 for Orderer is a catchall flag for behavior which has been
        # determined to be desired for all orderers running at the v1.1.x
        # level, but which would be incompatible with orderers from prior releases.
        # Prior to enabling V1.1 orderer capabilities, ensure that all
        # orderers on a channel are at v1.1.0 or later.
        V1_1: true

    # Application capabilities apply only to the peer network, and may be safely
    # used with prior release orderers.
    # Set the value of the capability to true to require it.
    Application: &ApplicationCapabilities
        # V1.3 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.3.
        V1_3: true
        # V1.2 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.2 (note, this need not be set if
        # later version capabilities are set)
        V1_2: true
        # V1.1 for Application enables the new non-backwards compatible
        # features and fixes of fabric v1.1 (note, this need not be set if
        # later version capabilities are set).
        V1_1: false


################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters
#
################################################################################
Application: &ApplicationDefaults

    # Organizations is the list of orgs which are defined as participants on
    # the application side of the network
    Organizations:
    # Policies:
    #     Readers:
    #         Type: ImplicitMeta
    #         Rule: "ANY Readers"
    #     Writers:
    #         Type: ImplicitMeta
    #         Rule: "ANY Writers"
    #     Admins:
    #         Type: ImplicitMeta
    #         Rule: "MAJORITY Admins"

    Capabilities:
        <<: *ApplicationCapabilities

################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults

    # Orderer Type: The orderer implementation to start
    # Available types are "solo" and "kafka"
    OrdererType: etcdraft 

    Addresses:
        - orderer.cdac.in:7050
        - orderer2.cdac.in:7050
        - orderer3.cdac.in:7050
        - orderer4.cdac.in:7050
        - orderer5.cdac.in:7050

    # Batch Timeout: The amount of time to wait before creating a batch
    BatchTimeout: 2s

    # Batch Size: Controls the number of messages batched into a block
    BatchSize:

        # Max Message Count: The maximum number of messages to permit in a batch
        MaxMessageCount: 10

        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch.
        AbsoluteMaxBytes: 98 MB

        # Preferred Max Bytes: The preferred maximum number of bytes allowed for
        # the serialized messages in a batch. A message larger than the preferred
        # max bytes will result in a batch larger than preferred max bytes.
        PreferredMaxBytes: 512 KB

    Kafka:
        # Brokers: A list of Kafka brokers to which the orderer connects
        # NOTE: Use IP:port notation
        Brokers:
            - 127.0.0.1:9092
   
    # Organizations is the list of orgs which are defined as participants on
    # the orderer side of the network
    Organizations:
    EtcdRaft:        
        Options:
            TickInterval: 500ms
            ElectionTick: 10
            HeartbeatTick: 1
            MaxInflightBlocks: 5
            SnapshotIntervalSize: 20MB
        Consenters:
                - Host: orderer.cdac.in
                  Port: 7050
                  ClientTLSCert: ../orderer-org/crypto-config/ordererOrganizations/cdac.in/orderers/orderer.cdac.in/tls/server.crt
                  ServerTLSCert: ../orderer-org/crypto-config/ordererOrganizations/cdac.in/orderers/orderer.cdac.in/tls/server.crt
                - Host: orderer2.cdac.in
                  Port: 7050
                  ClientTLSCert: ../orderer-org/crypto-config/ordererOrganizations/cdac.in/orderers/orderer2.cdac.in/tls/server.crt
                  ServerTLSCert: ../orderer-org/crypto-config/ordererOrganizations/cdac.in/orderers/orderer2.cdac.in/tls/server.crt
                - Host: orderer3.cdac.in
                  Port: 7050
                  ClientTLSCert: ../orderer-org/crypto-config/ordererOrganizations/cdac.in/orderers/orderer3.cdac.in/tls/server.crt
                  ServerTLSCert: ../orderer-org/crypto-config/ordererOrganizations/cdac.in/orderers/orderer3.cdac.in/tls/server.crt
                - Host: orderer4.cdac.in
                  Port: 7050
                  ClientTLSCert: ../orderer-org/crypto-config/ordererOrganizations/cdac.in/orderers/orderer4.cdac.in/tls/server.crt
                  ServerTLSCert: ../orderer-org/crypto-config/ordererOrganizations/cdac.in/orderers/orderer4.cdac.in/tls/server.crt
                - Host: orderer5.cdac.in
                  Port: 7050
                  ClientTLSCert: ../orderer-org/crypto-config/ordererOrganizations/cdac.in/orderers/orderer5.cdac.in/tls/server.crt
                  ServerTLSCert: ../orderer-org/crypto-config/ordererOrganizations/cdac.in/orderers/orderer5.cdac.in/tls/server.crt
    # Policies:
    #     Readers:
    #         Type: ImplicitMeta
    #         Rule: "ANY Readers"
    #     Writers:
    #         Type: ImplicitMeta
    #         Rule: "ANY Writers"
    #     Admins:
    #         Type: ImplicitMeta
    #         Rule: "MAJORITY Admins"
    #     # BlockValidation specifies what signatures must be included in the block
    #     # from the orderer for the peer to validate it.
    #     BlockValidation:
    #         Type: ImplicitMeta
    #         Rule: "ANY Writers"


################################################################################
#
#   CHANNEL
#
#   This section defines the values to encode into a config transaction or
#   genesis block for channel related parameters.
#
# ################################################################################
Channel: &ChannelDefaults
    # Policies defines the set of policies at this level of the config tree
    # For Channel policies, their canonical path is
    #   /Channel/<PolicyName>
    # Policies:
    #     # Who may invoke the 'Deliver' API
    #     Readers:
    #         Type: ImplicitMeta
    #         Rule: "ANY Readers"
    #     # Who may invoke the 'Broadcast' API
    #     Writers:
    #         Type: ImplicitMeta
    #         Rule: "ANY Writers"
    #     # By default, who may modify elements at this config level
    #     Admins:
    #         Type: ImplicitMeta
    #         Rule: "MAJORITY Admins"

    # Capabilities describes the channel level capabilities, see the
    # dedicated Capabilities section elsewhere in this file for a full
    # description
    Capabilities:
        <<: *ChannelCapabilities

################################################################################
#
#   Profile
#
#   - Different configuration profiles may be encoded here to be specified
#   as parameters to the configtxgen tool
#
################################################################################
Profiles:

    BCTOrdererGenesis:
        <<: *ChannelDefaults
        Capabilities:
            <<: *ChannelCapabilities
        Orderer:
            <<: *OrdererDefaults
            OrdererType: etcdraft
            EtcdRaft:
                Consenters:
                - Host: orderer.cdac.in
                  Port: 7050
                  ClientTLSCert: ../orderer-org/crypto-config/ordererOrganizations/cdac.in/orderers/orderer.cdac.in/tls/server.crt
                  ServerTLSCert: ../orderer-org/crypto-config/ordererOrganizations/cdac.in/orderers/orderer.cdac.in/tls/server.crt
                - Host: orderer2.cdac.in
                  Port: 7050
                  ClientTLSCert: ../orderer-org/crypto-config/ordererOrganizations/cdac.in/orderers/orderer2.cdac.in/tls/server.crt
                  ServerTLSCert: ../orderer-org/crypto-config/ordererOrganizations/cdac.in/orderers/orderer2.cdac.in/tls/server.crt
                - Host: orderer3.cdac.in
                  Port: 7050
                  ClientTLSCert: ../orderer-org/crypto-config/ordererOrganizations/cdac.in/orderers/orderer3.cdac.in/tls/server.crt
                  ServerTLSCert: ../orderer-org/crypto-config/ordererOrganizations/cdac.in/orderers/orderer3.cdac.in/tls/server.crt
                - Host: orderer4.cdac.in
                  Port: 7050
                  ClientTLSCert: ../orderer-org/crypto-config/ordererOrganizations/cdac.in/orderers/orderer4.cdac.in/tls/server.crt
                  ServerTLSCert: ../orderer-org/crypto-config/ordererOrganizations/cdac.in/orderers/orderer4.cdac.in/tls/server.crt
                - Host: orderer5.cdac.in
                  Port: 7050
                  ClientTLSCert: ../orderer-org/crypto-config/ordererOrganizations/cdac.in/orderers/orderer5.cdac.in/tls/server.crt
                  ServerTLSCert: ../orderer-org/crypto-config/ordererOrganizations/cdac.in/orderers/orderer5.cdac.in/tls/server.crt
            Addresses:
                - orderer.cdac.in:7050
                - orderer2.cdac.in:7050
                - orderer3.cdac.in:7050
                - orderer4.cdac.in:7050
                - orderer5.cdac.in:7050
            Organizations:
                - *OrdererOrg
               
            Capabilities:
                <<: *OrdererCapabilities
        Application:
            <<: *ApplicationDefaults
            Organizations:
            - <<: *OrdererOrg
           

        Consortiums:
            SampleConsortium:
                Organizations:
                    - *RegOrg
                    - *RevOrg
                    - *SurveyOrg
                    - *OtherOrg
                    - *ActsOrg
                    - *CdachOrg
                    - *DemoOrg
                    - *CdactnOrg
                    - *CdacndOrg                     

    PMBCTorgsChannel:
        Consortium: SampleConsortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *RegOrg
                - *RevOrg
                - *SurveyOrg
                - *OtherOrg
            Capabilities:
                <<: *ApplicationCapabilities    
    CdacPoEorgsChannel:
        Consortium: SampleConsortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *CdachOrg
                - *DemoOrg
                - *ActsOrg
                - *CdactnOrg
                - *CdacndOrg
            Capabilities:
                <<: *ApplicationCapabilities
